
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftEQNEleftLTGTLEGEleftPLUSMINUSleftMULTDIVASSIGN DIV ELSE EQ GE GT ID IF INT LBRACE LE LPAREN LT MAIN MINUS MULT NE NUMBER PLUS RBRACE RETURN RPAREN SEMI WHILEprogram : INT MAIN LPAREN RPAREN LBRACE stmt_list RBRACEstmt_list : stmt        \n                 | stmt_list stmtstmt : INT ID ASSIGN expr SEMIstmt : RETURN expr SEMIstmt : IF LPAREN expr RPAREN LBRACE stmt_list RBRACEstmt : IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACEexpr : expr PLUS exprexpr : expr MINUS exprexpr : expr EQ exprexpr : expr NE exprexpr : expr LT exprexpr : expr GT exprexpr : expr LE exprexpr : expr GE exprexpr : NUMBERexpr : ID'
    
_lr_action_items = {'INT':([0,6,8,9,14,20,40,41,42,43,45,46,47,],[2,7,7,-2,-3,-5,-4,7,7,-6,7,7,-7,]),'$end':([1,13,],[0,-1,]),'MAIN':([2,],[3,]),'LPAREN':([3,11,],[4,18,]),'RPAREN':([4,16,17,29,31,32,33,34,35,36,37,38,],[5,-16,-17,39,-8,-9,-10,-11,-12,-13,-14,-15,]),'LBRACE':([5,39,44,],[6,41,45,]),'RETURN':([6,8,9,14,20,40,41,42,43,45,46,47,],[10,10,-2,-3,-5,-4,10,10,-6,10,10,-7,]),'IF':([6,8,9,14,20,40,41,42,43,45,46,47,],[11,11,-2,-3,-5,-4,11,11,-6,11,11,-7,]),'ID':([7,10,18,19,21,22,23,24,25,26,27,28,],[12,17,17,17,17,17,17,17,17,17,17,17,]),'RBRACE':([8,9,14,20,40,42,43,46,47,],[13,-2,-3,-5,-4,43,-6,47,-7,]),'NUMBER':([10,18,19,21,22,23,24,25,26,27,28,],[16,16,16,16,16,16,16,16,16,16,16,]),'ASSIGN':([12,],[19,]),'SEMI':([15,16,17,30,31,32,33,34,35,36,37,38,],[20,-16,-17,40,-8,-9,-10,-11,-12,-13,-14,-15,]),'PLUS':([15,16,17,29,30,31,32,33,34,35,36,37,38,],[21,-16,-17,21,21,-8,-9,21,21,21,21,21,21,]),'MINUS':([15,16,17,29,30,31,32,33,34,35,36,37,38,],[22,-16,-17,22,22,-8,-9,22,22,22,22,22,22,]),'EQ':([15,16,17,29,30,31,32,33,34,35,36,37,38,],[23,-16,-17,23,23,-8,-9,-10,-11,-12,-13,-14,-15,]),'NE':([15,16,17,29,30,31,32,33,34,35,36,37,38,],[24,-16,-17,24,24,-8,-9,-10,-11,-12,-13,-14,-15,]),'LT':([15,16,17,29,30,31,32,33,34,35,36,37,38,],[25,-16,-17,25,25,-8,-9,25,25,-12,-13,-14,-15,]),'GT':([15,16,17,29,30,31,32,33,34,35,36,37,38,],[26,-16,-17,26,26,-8,-9,26,26,-12,-13,-14,-15,]),'LE':([15,16,17,29,30,31,32,33,34,35,36,37,38,],[27,-16,-17,27,27,-8,-9,27,27,-12,-13,-14,-15,]),'GE':([15,16,17,29,30,31,32,33,34,35,36,37,38,],[28,-16,-17,28,28,-8,-9,28,28,-12,-13,-14,-15,]),'ELSE':([43,],[44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmt_list':([6,41,45,],[8,42,46,]),'stmt':([6,8,41,42,45,46,],[9,14,9,14,9,14,]),'expr':([10,18,19,21,22,23,24,25,26,27,28,],[15,29,30,31,32,33,34,35,36,37,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INT MAIN LPAREN RPAREN LBRACE stmt_list RBRACE','program',7,'p_program','parser.py',24),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','parser.py',28),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list','parser.py',29),
  ('stmt -> INT ID ASSIGN expr SEMI','stmt',5,'p_stmt_decl','parser.py',36),
  ('stmt -> RETURN expr SEMI','stmt',3,'p_stmt_return','parser.py',43),
  ('stmt -> IF LPAREN expr RPAREN LBRACE stmt_list RBRACE','stmt',7,'p_stmt_if','parser.py',47),
  ('stmt -> IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE','stmt',11,'p_stmt_if_else','parser.py',51),
  ('expr -> expr PLUS expr','expr',3,'p_expr_plus','parser.py',55),
  ('expr -> expr MINUS expr','expr',3,'p_expr_minus','parser.py',59),
  ('expr -> expr EQ expr','expr',3,'p_expr_eq','parser.py',63),
  ('expr -> expr NE expr','expr',3,'p_expr_ne','parser.py',67),
  ('expr -> expr LT expr','expr',3,'p_expr_lt','parser.py',71),
  ('expr -> expr GT expr','expr',3,'p_expr_gt','parser.py',75),
  ('expr -> expr LE expr','expr',3,'p_expr_le','parser.py',79),
  ('expr -> expr GE expr','expr',3,'p_expr_ge','parser.py',83),
  ('expr -> NUMBER','expr',1,'p_expr_number','parser.py',87),
  ('expr -> ID','expr',1,'p_expr_id','parser.py',91),
]
